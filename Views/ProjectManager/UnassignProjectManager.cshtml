@model ProjectBugTracker.Models.ProjectUsersView

@{
    ViewBag.Title = "UnassignProjectManager";
}

<h2>UnassignProjectManager</h2>


@using (Html.BeginForm("UnassignProjectManager", "ProjectManager", FormMethod.Post, new { encType = "multipart/form-data", name = "myform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project Manager</h4>
        <hr />


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.HiddenFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.EditorFor(model => model.RoleId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>*@
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                </div>*@
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Users, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedUsers, Model.Users as MultiSelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Users, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
